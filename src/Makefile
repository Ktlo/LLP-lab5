# Файлы с исходным кодом, которые есть в данной папке, перечислены в этой переменной
src = ${wildcard *.c}
# Сохранить все объектные файлы в переменную, но исключить из них main.o,
# так как он нужен только для программы, а не для библиотеки
obj = ${filter-out main.o,${src:.c=.o}}
# Записать имя файла зависимостей для каждого исходного файла в проекте
dep = ${src:.c=.d}

# Основной рецепт в этом файле, создаёт библиотку из всех объектных файлов кроме main.o
# Вызывается в цели build основного Makefile проекта
lib$(NAME).a: $(obj)
	$(AR) $(ARFLAGS) $@ $^

# Цель, получающая программу для примера, вызывается в цели example основного Makefile проекта
$(NAME): main.o lib$(NAME).a
	$(CC) $(LDFLAGS) $^ $(LDLIBS) -o $@

# Включить содержимое всех сгенерированных файлов зависимостей
-include $(dep)

# Шаблонный рецепт, который получает файлы зависимостей для каждого исходного файла.
# Это удобно при редактировании заголовочных файлов, чтобы все исходники,
# использующие отредактированные заголовки автоматически пересобрались.
%.d: %.c
	@$(CPP) $(CFLAGS) $< -MM -MT $(@:.d=.o) > $@

.PHONY: clean
# Удаляет объектные файлы, файлы зависимостей, библиотеку и исполняемый файл из src
clean:
	$(RM) lib$(NAME).a $(obj) $(dep) $(NAME) main.o
